<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    >
    <ControlTemplate TargetType="{x:Type CheckBox}" x:Key="MyCheckBoxTemplate">
        <StackPanel Orientation="Horizontal" Background="#CAD0C8" >
            <Path x:Name="Equis" 
                      Stroke="#FF485966" 
                      StrokeThickness="1" 
                      Fill="#FF485966"
                      Height="16" Width="16" Stretch="None" 
                      Margin="0,0,0,0"
                      Opacity="1">
                <Path.Data>
                    <RectangleGeometry Rect="4,4 8,8"/>
                </Path.Data>
            </Path>
            <ContentPresenter Margin="4" HorizontalAlignment="Left" VerticalAlignment="Top" />
        </StackPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="Equis" Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsChecked" Value="false">
                <Setter TargetName="Equis" Property="Opacity" Value="0" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Foreground" Value="#D9D9D9"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid Name="Root" Height="27" Background="#CAD0C8">
                        <ContentPresenter Name="HeaderHost" Margin="10,0,0,0" ContentSource="Header" RecognizesAccessKey="True" HorizontalAlignment="Left" VerticalAlignment="Center"
                      TextOptions.TextRenderingMode="ClearType" TextBlock.FontSize="20" TextBlock.FontFamily="Flavors" TextBlock.Foreground="Black" TextOptions.TextFormattingMode="Display"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Root" Property="Background" Value="#868C98"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Root" Property="Background" Value="#D9D9D9"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Width" Value="170"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Grid Background="Transparent">
                        <Border Margin="0,0,5,5" Background="#CAD0C8" BorderThickness="0">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="2"/>
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="3" ShadowDepth="3" Color="Black" Opacity="0.5"/>
                            </Border.Effect>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="xctk:MaskedTextBox">
        <Setter Property="Width" Value="auto"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="#D9D9D9"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontFamily" Value="Flavors"/>
    </Style>
    <Style TargetType="xctk:DateTimePicker">
        <Setter Property="TimePickerVisibility" Value="Hidden"/>
        <Setter Property="Background" Value="#D9D9D9"/>
        <Setter Property="FormatString" Value="yyyy-MM-dd"/>
        <Setter Property="Format" Value="Custom"/>
        <Setter Property="FontFamily" Value="Flavors"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="TextAlignment" Value="Left"/>
    </Style>
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="#FFCAD0C8"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="#FF485966"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style TargetType="{x:Type DataGridCell}">
        <Setter Property="BorderThickness" Value="4"/>
        <Setter Property="BorderBrush" Value="#A5AAB2"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="FontFamily" Value="Flavors"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="TextBlock.TextAlignment" Value="Left"/>
        <Setter Property="Background" Value="#D9D9D9"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#CAD0C8"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="FontFamily" Value="Flavors"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="#D9D9D9"/>
        <Setter Property="BorderThickness" Value="4"/>
        <Setter Property="BorderBrush" Value="#A5AAB2"/>
    </Style>
    <Style x:Key="report_button" TargetType="StackPanel">
        <Style.Resources>
            <Style TargetType="Rectangle"  >
                <Setter Property="Fill" Value="#CAD0C8"></Setter>
            </Style>
            <Style TargetType="Button">
                <Setter Property="Background" Value="#868C98"></Setter>
                <Setter Property="MinWidth" Value="64"></Setter>
                <Setter Property="MaxWidth" Value="128"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#CAD0C8"></Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#CAD0C8"/>
    <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#485966"/>
    <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#CAD0C8"/>
    <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#485966"/>
    <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#CAD0C8"/>
    <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#485966"/>
    <Style x:Key="ListBoxItemContainerStyle1" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="4,1"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource Item.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource Item.MouseOver.Border}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource Item.SelectedInactive.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource Item.SelectedInactive.Border}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource Item.SelectedActive.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource Item.SelectedActive.Border}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="green_button"  TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
        <Setter Property="Background" Value="#CAD0C8"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="FontFamily" Value="Flavors"/>
        <Setter Property="MinWidth" Value="150"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" Direction="320" ShadowDepth="4" BlurRadius="4" Opacity="0.25" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Width" Value="auto"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="#D9D9D9"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontFamily" Value="Flavors"/>
    </Style>
    <Style x:Key="ComboBoxTest2" TargetType="{x:Type ComboBox}">
        <Setter Property="Height" Value="50"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton Grid.Column="2" Focusable="false" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" >
                            <ToggleButton.Template>
                                <ControlTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="5*"/>
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="Border"  Grid.ColumnSpan="2" Background="#D9D9D9" />
                                        <Border Grid.Column="0"    Background="#D9D9D9"/>
                                        <TextBlock Grid.Column="0" FontSize="16"/>
                                        <Path x:Name="Arrow" Grid.Column="1" Fill="Black" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="#CAD0C8" />
                                        </Trigger>
                                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="#CAD0C8" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3" VerticalAlignment="Center">
                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="FontSize" Value="16" />
                                    <Setter Property="FontFamily" Value="Flavors" />
                                    <Setter Property="Margin" Value="5,0,0,0"/>
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                        <TextBox x:Name="PART_EditableTextBox" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True"  Focusable="False" PopupAnimation="Slide">
                            <Grid  x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="#D9D9D9" />
                                <ScrollViewer SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="sndpanel" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="#868C98"/>
    </Style>
    <Style x:Key="graybutton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#868C98"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="#CAD0C8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#CAD0C8"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="text" TargetType="{x:Type TextBox}">
        <Setter Property="Width" Value="auto"/>
        <Setter Property="Height" Value="auto"/>
    </Style>
    <Style x:Key="buttext" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Flavors"/>
    </Style>
    <Style TargetType="PasswordBox">
        <Setter Property="Width" Value="300"></Setter>
        <Setter Property="Height" Value="50"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Background" Value="#D9D9D9"></Setter>
        <Setter Property="FontSize" Value="36"></Setter>
        <Setter Property="FontFamily" Value="Flavors"></Setter>
    </Style>
    <Style x:Key="butclose" TargetType="Button">
        <Setter Property="Background" Value="#CAD0C8"></Setter>
        <Setter Property="FontSize" Value="18"></Setter>
        <Setter Property="FontFamily" Value="Flavors"></Setter>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    <Style TargetType="Window">
        <Setter Property="FontFamily" Value="Flavors"></Setter>
    </Style>
    <Style TargetType="Label">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontFamily" Value="Flavors"/>
    </Style>
    <Style x:Key="backupui" TargetType="TextBlock">
        <Setter Property="FontSize" Value="20"></Setter>
    </Style>
</ResourceDictionary>